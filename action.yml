name: 'Build and test docker image from dockerfile'
description: 'Custom action for building a docker image '
inputs:
  repository:
    description: "the repo to checkout"
    required: true
  repository-ref:
    description: "the ref to checkout"
    required: false
  artifact-in-name:
    description: "input docker image artifact"
    required: false
  artifact-out-tag:
    description: "tag for output docker image"
    required: false
  artifact-out-name:
    description: "name for output docker image"
    required: false
  dockerfile-path:
    description: "path to dockerfile in the repo"
    required: true
  docker-build-args:
    description: "list of build args for docker build"
    required: false
  push-image:
    description: "boolean of whether to push the built image to a registry"
    required: false
    default: false
runs:
  using: "composite"
  steps:
    - name: Debugging
      shell: bash
      run: |
        echo "repo ref: ${{inputs.repository-ref}}"
        echo "event_name: ${{github.event_name}}"
        echo "ref: ${{github.ref}}"
        echo "ref_name: ${{github.ref_name}}"
        echo "sha: ${{github.sha}}"
        echo "pull_request sha: ${{github.event.pull_request.head.sha}}"
        echo "push sha: ${{github.event.push.after}}"
        echo "github: ${{toJson(github)}}"


    - name: Download artifact
      if: ${{ inputs.artifact-in-name }}
      uses: actions/download-artifact@v3
      with:
        name: ${{ inputs.artifact-in-name }}
        path: /tmp

    - name: Load Cyclus Docker Image
      if: ${{ inputs.artifact-in-name }}
      shell: bash
      run: |
        docker load --input /tmp/${{ inputs.artifact-in-name }}.tar

    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        repository: ${{ inputs.repository }}
        ref: ${{ inputs.repository-ref }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Debug
      shell: bash
      run: |
        pwd
        ls

    - name: Build and export
      id: build-and-export
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ${{ inputs.dockerfile-path }}
        push: ${{ inputs.push-image }}
        tags: ${{ inputs.artifact-out-tag }}
        outputs: type=docker,dest=/tmp/${{ inputs.artifact-out-name }}.tar
        build-args: ${{ inputs.docker-build-args }}

    - name: Upload artifact
      if: ${{ inputs.artifact-out-name }}
      uses: actions/upload-artifact@v3
      with:
        name: ${{ inputs.artifact-out-name }}
        path: /tmp/${{ inputs.artifact-out-name }}.tar